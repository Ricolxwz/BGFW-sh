---
# 请先确保app桥接网络已经创建
# 请确保将PUID, PGID改成wenzexu的

services:
  minio: # 9001 UI 9000 S3, 记得修改权限为wenzexu:wenzexu, 否则无法启动; 记得NPM启用WebSocket支持
    image: bitnami/minio
    container_name: minio
    hostname: minio
    environment:
      - MINIO_ROOT_USER=wenzexu
      - MINIO_ROOT_PASSWORD=$MINIO_ROOT_PASSWORD
      - MINIO_DATA_DIR=/bitnami/minio/data
      - TZ=Asia/Shanghai
      - MINIO_DOMAIN=s3.ricolxwz.io # 启用virtual host style, 一般path style已经足够, 且virtual host style需要申请三级域名通配符证书
    volumes:
      - /home/wenzexu/app/minio:/bitnami/minio/data
    networks:
      - app
    restart: unless-stopped
  freshrss: # 80
    image: lscr.io/linuxserver/freshrss:latest
    container_name: freshrss
    hostname: freshrss
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - /home/wenzexu/app/freshrss:/config
    restart: unless-stopped
    networks:
      - app
  rsshub: # 1200
    image: diygod/rsshub
    restart: unless-stopped
    container_name: rsshub
    hostname: rsshub
    environment:
      - NODE_ENV=production
      - CACHE_TYPE=redis
      - REDIS_URL="redis://rsshub-redis:6379/"
      - PUPPETEER_WS_ENDPOINT="ws://rsshub-browserless:3000"
      - TZ=Asia/Shanghai
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1200/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - rsshub-redis
      - rsshub-browserless
    networks:
      - app
  rsshub-browserless:
    image: browserless/chrome
    restart: unless-stopped
    container_name: rsshub-browserless
    hostname: rsshub-browserless
    networks:
      - app
    environment:
      - TZ=Asia/Shanghai
    ulimits:
      core:
          hard: 0
          soft: 0
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:3000/pressure"]
        interval: 30s
        timeout: 10s
        retries: 3
  rsshub-redis:
    image: redis:alpine
    container_name: rsshub-redis
    hostname: rsshub-redis
    networks:
      - app
    environment:
      - TZ=Asia/Shanghai
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 5s
  stirling-pdf: # 8080
    image: frooodle/s-pdf:latest
    container_name: stirling-pdf
    hostname: stirling-pdf
    volumes:
      - /home/wenzexu/app/stirling-pdf/trainingData:/usr/share/tessdata
      - /home/wenzexu/app/stirling-pdf/extraConfigs:/configs
    environment:
      - DOCKER_ENABLE_SECURITY=true
      - INSTALL_BOOK_AND_ADVANCED_HTML_OPS=false
      - LANGS=zh_CN
      - TZ=Asia/Shanghai
      - SECURITY_ENABLE_LOGIN=true
    restart: unless-stopped
    networks:
      - app
  it-tools: # 80
    image: corentinth/it-tools
    restart: unless-stopped
    container_name: it-tools
    hostname: it-tools
    environment:
      - TZ=Asia/Shanghai
    networks:
      - app
  # halo: # 8090
  #   image: halohub/halo:2.19
  #   restart: unless-stopped
  #   container_name: halo
  #   hostname: halo
  #   depends_on:
  #     halo-db:
  #       condition: service_healthy
  #   environment:
  #     - TZ=Asia/Shanghai
  #     - HALO_EXTERNAL_URL=https://blog.ricolxwz.de
  #   networks:
  #     - app
  #   volumes:
  #     - /home/wenzexu/app/halo:/home/wenzexu/.halo2
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8090/actuator/health/readiness"]
  #     interval: 30s
  #     timeout: 5s
  #     retries: 5
  #     start_period: 30s
  #   command:
  #     - --spring.r2dbc.url=r2dbc:pool:postgresql://halo-db/halo
  #     - --spring.r2dbc.username=halo
  #     - --spring.r2dbc.password=$HALO_POSTGRES_PASSWORD
  #     - --spring.sql.init.platform=postgresql
  #     - --halo.external-url=http://localhost:8090/
  # halo-db:
  #   image: postgres:15.4
  #   restart: unless-stopped
  #   container_name: halo-db
  #   hostname: halo-db
  #   networks:
  #     - app
  #   volumes:
  #     - /home/wenzexu/app/halo-db:/var/lib/postgresql/data
  #   healthcheck:
  #     test: [ "CMD", "pg_isready" ]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   environment:
  #     - POSTGRES_PASSWORD=$HALO_POSTGRES_PASSWORD
  #     - POSTGRES_USER=halo
  #     - POSTGRES_DB=halo
  #     - PGUSER=halo
  #     - TZ=Asia/Shanghai
  alist: # 5244
    container_name: alist
    hostname: alist
    image: 'xhofe/alist:latest'
    restart: unless-stopped
    volumes:
      - /home/wenzexu/app/alist:/opt/alist/data
    environment:
      - PUID=1001
      - PGID=1001
      - UMASK=022
      - TZ=Asia/Shanghai
    networks:
      - app
  lobechat: # 3210
    image: lobehub/lobe-chat
    container_name: lobechat
    hostname: lobechat
    restart: unless-stopped
    environment:
      - OPENAI_API_KEY=$OPENAI_API_KEY
      - ACCESS_CODE=$ACCESS_CODE
      - ANTHROPIC_API_KEY=$ANTHROPIC_API_KEY
      - FEATURE_FLAGS=-welcome_suggest
      - TZ=Asia/Shanghai
    networks:
      - app
  umami: # 3000
    container_name: umami
    hostname: umami
    image: ghcr.io/umami-software/umami:postgresql-latest
    environment:
      - DATABASE_URL=postgresql://umami:${POSTGRES_PASSWORD}@umami-db:5432/umami
      - DATABASE_TYPE=postgresql
      - APP_SECRET=replace-me-with-a-random-string
      - TZ=Asia/Shanghai
    depends_on:
      umami-db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:3000/api/heartbeat"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app
  umami-db: # 5432
    container_name: umami-db
    hostname: umami-db
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=umami
      - POSTGRES_USER=umami
      - TZ=Asia/Shanghai
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    volumes:
      - /home/wenzexu/app/umami-db:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app
  uptime-kuma: # 3001
    container_name: uptime-kuma
    hostname: uptime-kuma
    image: louislam/uptime-kuma:1
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - /home/wenzexu/app/uptime-kuma:/app/data
    restart: unless-stopped
    networks:
      - app
  memos: # 5230
    container_name: memos
    hostname: memos
    image: neosmemo/memos:stable
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - /home/wenzexu/app/memos:/var/opt/memos
    restart: unless-stopped
    networks:
      - app
  yourls: # 80
    container_name: yourls
    hostname: yourls
    image: yourls
    restart: unless-stopped
    environment:
      - YOURLS_DB_HOST=yourls-db
      - YOURLS_DB_USER=yourls
      - YOURLS_DB_PASS=$MYSQL_PASSWORD
      - YOURLS_DB_NAME=yourls
      - YOURLS_USER=$YOURLS_USER
      - YOURLS_PASS=$YOURLS_PASS
      - YOURLS_SITE=$YOURLS_SITE
      - YOURLS_HOURS_OFFSET=8
      - TZ=Asia/Shanghai
    volumes:
      - /home/wenzexu/app/yourls/:/var/www/html   
    networks:
      - app
  yourls-db:
    container_name: yourls-db
    hostname: yourls-db
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
      - MYSQL_DATABASE=yourls
      - MYSQL_USER=yourls
      - MYSQL_PASSWORD=$MYSQL_PASSWORD
      - TZ=Asia/Shanghai
    volumes:
      - /home/wenzexu/app/yourls-db/db:/var/lib/mysql
      - /home/wenzexu/app/yourls-db/conf:/etc/mysql/conf.d
    restart: unless-stopped
    networks:
      - app
  nav: # 80
    container_name: nav
    hostname: nav
    image: nginx
    restart: unless-stopped
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - /home/wenzexu/app/nav:/usr/share/nginx/html:ro
    networks:
      - app
  # gitlab: # 7750 GIT
  #   container_name: gitlab
  #   hostname: gitlab
  #   image: gitlab/gitlab-ce:17.2.1-ce.0
  #   restart: unless-stopped
  #   ports:
  #     - '7750:22'
  #   environment:
  #     TZ: "Asia/Shanghai"
  #     GITLAB_ROOT_EMAIL: $GITLAB_ROOT_EMAIL
  #     GITLAB_ROOT_PASSWORD: $GITLAB_ROOT_PASSWORD
  #     GITLAB_OMNIBUS_CONFIG: |
  #       external_url 'https://git.ricolxwz.io'
  #       gitlab_rails['gitlab_shell_ssh_port'] = 7750
  #       letsencrypt['enabled'] = false
  #       nginx['enable'] = true
  #       nginx['listen_port'] = 80
  #       nginx['listen_https'] = false
  #   volumes:
  #     - '/home/wenzexu/app/gitlab/config:/etc/gitlab'
  #     - '/home/wenzexu/app/gitlab/logs:/var/log/gitlab'
  #     - '/home/wenzexu/app/gitlab/data:/var/opt/gitlab'
  #   shm_size: '256m'
  #   networks:
  #     - app
  # gitlab-runner:
  #   container_name: gitlab-runner
  #   hostname: gitlab-runner
  #   image: gitlab/gitlab-runner:v17.2.1
  #   restart: unless-stopped
  #   environment:
  #     - TZ=Asia/Shanghai
  #   depends_on:
  #     - gitlab
  #   volumes:
  #    - /home/wenzexu/app/gitlab-runner/config:/etc/gitlab-runner
  #    - /var/run/docker.sock:/var/run/docker.sock
  #   networks:
  #       - app
  easyimage: # 80
    container_name: easyimage
    hostname: easyimage
    image: ddsderek/easyimage:latest
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - '/home/wenzexu/app/easyimage/config:/app/web/config'
      - '/home/wenzexu/app/easyimage/i:/app/web/i'
    restart: unless-stopped
    networks:
      - app
  excalidraw: # 80
    init: true
    container_name: excalidraw
    hostname: excalidraw
    image: excalidraw/excalidraw:latest
    environment:
      - TZ=Asia/Shanghai
    restart: unless-stopped
    networks:
      - app
  flare: # 5005
    image: soulteary/flare
    container_name: flare
    hostname: flare
    restart: unless-stopped
    command: flare --nologin=0
    environment:
      - FLARE_GUIDE=0
      - FLARE_USER=wenzexu
      - FLARE_PASS=$FLARE_PASS
      - TZ=Asia/Shanghai
    volumes:
      - /home/wenzexu/app/flare:/app
    networks:
      - app
  pingvin-share: # 3000
    image: stonith404/pingvin-share
    container_name: pingvin-share
    hostname: pingvin-share
    restart: unless-stopped
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - /home/wenzexu/app/pingvin-share:/opt/app/backend/data
    networks:
      - app
  cryptgeon-redis: # 6379
    image: redis:7-alpine
    command: redis-server --maxmemory 1gb --maxmemory-policy allkeys-lru
    container_name: cryptgeon-redis
    environment:
      - TZ=Asia/Shanghai
    hostname: cryptgeon-redis
    restart: unless-stopped
    networks:
      - app
  cryptgeon: # 8000
    image: cupcakearmy/cryptgeon:latest
    container_name: cryptgeon
    hostname: cryptgeon
    depends_on:
      - cryptgeon-redis
    environment:
      - SIZE_LIMIT=20 MiB
      - REDIS=redis://cryptgeon-redis:6379
      - TZ=Asia/Shanghai
    restart: unless-stopped
    networks:
      - app
  moments: # 3000
    image: kingwrcy/moments:latest
    container_name: moments
    hostname: moments
    environment:
      - JWT_KEY=$JWT_KEY
      - TZ=Asia/Shanghai
    volumes:
      - /home/wenzexu/app/moments:/app/data
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    networks:
      - app
    restart: unless-stopped
  aria2-pro: # 6800 RPC, RPC地址为http://aria2-pro:6800/jsonrpc
    image: p3terx/aria2-pro
    container_name: aria2-pro
    hostname: aria2-pro
    environment:
      - PUID=1001 # 可以换成普通用户
      - PGID=1001
      - UMASK_SET=022
      - RPC_SECRET=$RPC_SECRET
      - RPC_PORT=6800
      - LISTEN_PORT=6888
      - DISK_CACHE=64M
      - UPDATE_TRACKERS=true
      - TTZ=Asia/Shanghai
    volumes:
      - /home/wenzexu/app/aria2/config:/config
      - /home/wenzexu/app/aria2/downloads:/downloads
      - /home/wenzexu/app/alist:/opt/alist/data
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: 1m
    networks:
      - app
  # ariang: # 6880
  #   container_name: ariang
  #   hostname: ariang
  #   image: p3terx/ariang
  #   restart: unless-stopped
  #   environment:
  #     - TZ=Asia/Shanghai
  #   logging:
  #     driver: json-file
  #     options:
  #       max-size: 1m
  #   networks:
  #     - app
  qbittorrent: # 8080
    container_name: qbittorrent
    hostname: qbittorrent
    image: linuxserver/qbittorrent:latest
    environment:
      - PUID=1001
      - PGID=1001
      - UMASK=022
      - TZ=Asia/Shanghai
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
      - TZ=Asia/Shanghai
    volumes:
      - /home/wenzexu/app/qbittorrent/config:/config
      - /home/wenzexu/app/qbittorrent/downloads:/downloads
      - /home/wenzexu/app/alist:/opt/alist/data
    restart: unless-stopped
    networks:
      - app
  transmission: # 9091
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    hostname: transmission
    environment:
      - PUID=1001
      - PGID=1001
      - UMASK=022
      - USER=wenzexu
      - PASS=$TRANSMISSION_PASSWORD
      - TZ=Asia/Shanghai
    volumes:
      - /home/wenzexu/app/transmission/config:/config
      - /home/wenzexu/app/transmission/downloads:/downloads
      - /home/wenzexu/app/transmission/watch:/watch
    restart: unless-stopped
    networks:
      - app

networks:
  app:
    external: true
