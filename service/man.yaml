---
# 请先确保app桥接网络已经创建
# 请确保将host.docker.internal改为主机在app网络上的ip

services:
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    hostname: watchtower
    environment:
      - TZ=Asia/Shanghai
      - PUID=1001
      - PGID=1001
      - UMASK=022
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    networks:
      - app
  nginx-proxy-manager:
    container_name: npm
    hostname: npm
    image: 'jc21/nginx-proxy-manager:latest'
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - PUID=1001
      - PGID=1001
      - UMASK=022
    extra_hosts:
      - "host.docker.internal:172.18.0.1" # 请修改为主机在app网络中的ip. 若要使用host.docker.internal反代主机的服务, 请确保服务监听的ip是主机在app网卡上的ip, 或者是0.0.0.0. 如Jupyter Server服务设置监听地址为172.18.0.1:65520, 在NPM中, 要设置为反代171.18.0.1:65520, 好像无法使用host.docker.internal域名, 只能使用ip, 可能是bug, 可能直接忽略了hosts文件里面定义的host.docker.internal
    ports:
      - '80:80'
      - '443:443'
      # - '81:81'
    volumes:
      - /home/wenzexu/man/nginx/data:/data
      - /home/wenzexu/man/nginx/letsencrypt:/etc/letsencrypt
    networks:
      - app
  # portainer: # 9443
  #   container_name: portainer
  #   hostname: portainer
  #   image: portainer/portainer-ce:latest
  #   environment:
  #     - TZ=Asia/Shanghai
  #   volumes:
  #     - /home/wenzexu/man/portainer:/data
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   restart: always
  #   networks:
  #     - app

networks:
  app:
    external: true
